{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to KRSRI Barelang F1","text":"ROBOT HEXAPOD BARELANG F1"},{"location":"#apa-itu-krsri-barelang-f1","title":"Apa itu KRSRI Barelang F1?","text":"<p>KRSRI Barelang F1 adalah robot Hexapod atau robot berkaki enam dengan bentuk yang menyerupai laba-laba, namun robot Hexapod hanya memiliki 6 kaki daripada 8 kaki.</p> <p>Robot Hexapod F1 nantinya akan di ikut sertakan dalam perlombaan Kontes Robotik Indonesia (KRI) dimana robot ini akan dilengkapi dengan gripper yang akan membantu robot mengangkut objek yang nantinya harus diangkut ke zona yang ditandai agar mendapatkan poin dan memenangkan perlombaan.</p> <p>Untuk dokumentasi penuh silahkan kunjungi barelang.org.</p>"},{"location":"#our-team","title":"Our Team","text":"BARELANG F1 2024-2025 TEAM"},{"location":"instalasiH/","title":"Instalasi Hardware","text":"BRO WHAT THE HECK BWAH <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>"},{"location":"instalasiH/#1-assembly-robot-from-scratch","title":"1. Assembly Robot From Scratch","text":"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>"},{"location":"instalasiH/#2-wiring-electrical-robot","title":"2. Wiring Electrical Robot","text":"<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>"},{"location":"instalasiS/","title":"Instalasi Software Robot Hexapod","text":""},{"location":"instalasiS/#penginstalan-software-motion","title":"Penginstalan Software Motion","text":""},{"location":"instalasiS/#penginstalan-operating-system","title":"Penginstalan Operating System","text":"<p>Untuk dapat mngoperasikan sistem-sistem yang akan digunakan pada robot Hexapod ini, langkah pertama yang harus dilakukan adalah menginstall operating system yang sesuai agar kita dapat memulai pemrograman, Operating System yang digunakan adalah Ubuntu V18.04. </p>"},{"location":"instalasiS/#penginstalan-microsoft-visual-studio-code","title":"Penginstalan Microsoft Visual Studio Code","text":"<p>Microsoft Visual Studio Code akan sangat membantu kita dalam pembuatan banyaknya program-program yang akan digunakan pada robot Hexapod nanti. Untuk penginstalan VSC itu sendiri dapat dilakukan dengan mengunjungi website official Visual Studio Code setelah itu memilih bagian penginstalan Linux .deb seperti pada gambar dibawah ini.</p> <p>Setelah itu melakukan penginstalan dengan memasukkan perintah berikut ini:</p> Perintah Instalasi<pre><code>sudo dpkg -i [direktori file]\n</code></pre> <p>Note</p> <p>Untuk opsi .deb ini sendiri mensupport banyak format seperti x64, arm32 dan arm64. Memencet tombol .deb utama di pojok kiri atas gambar maka installer akan otomatis menginstall sesuai dengan format device.</p> <p></p>"},{"location":"instalasiS/#penginstalan-dynamixel-sdk","title":"Penginstalan Dynamixel SDK","text":"<p>Dynamixel SDK adalah software pengembangan yang menyediakan fungsi kendali menggunakan packet communication. API dari Dynamixel DK itu sendiri di desain untuk aktuator Dynamixel dan semua platform berbasis Dynamixel. Untuk penggunaan software ini diperlukan pemahaman dasar tentang bahasa pemrograman C/C++.</p> <p>Untuk memulai langkah penginstalan dapat dilakukan dengan cara memasukkan perintah berikut kedalam terminal program: Perintah Penginstalan Dynamixel SDK<pre><code>$ git clone https://github.com/ROBOTIS-GIT/DynamixelSDK.git\n</code></pre> Atau dapat dilakukan juga dengan langsung menekan tombol link yang tertera pada bagian Download-Repository di website Dynamixel SDK dan Setelah itu kita akan memasuki tahap Library Setup. </p>"},{"location":"instalasiS/#cpp-linux-library-setup-compiler-and-builder","title":"CPP Linux Library Setup (Compiler and Builder)","text":""},{"location":"instalasiS/#1compiler","title":"1.Compiler","text":"<ul> <li>GNU gcc versi 5.4.0 20160609 atau lebih tinggi</li> <li>Untuk memeriksa versi compiler gcc, dapat dilakukan menggunakan perintah ini: <pre><code>$ gcc -v \n</code></pre></li> <li>Download compiler yang dibutuhkan dengan perintah ini: <pre><code>$ sudo apt-get install gcc-5\n</code></pre> </li> </ul>"},{"location":"instalasiS/#2builder","title":"2.Builder","text":"<ul> <li>Dapatkan pkg yang diperlukan untuk Build menggunakan \u2192 make. Perintah yang dijalankan adalah: <pre><code>$ sudo apt-get install build-essential\n</code></pre> </li> </ul>"},{"location":"instalasiS/#3membuat-library","title":"3.Membuat Library","text":"<ul> <li>Memilih format (64bit atau 32bit) yang ingin digunakan untuk membuat library. Library ini sendiri dapat dibuat menggunakan platform x32bit, x64bit atau SBC. Disini kami menggunakan SBC sehingga Lokasi direktori Makefile dapat ditemukan melalui address berikut:   <code>[DynamixelSDK folder]/cpp/build/linux_sbc</code>  Sumber contoh yang akan dibuat adalah dalam bentuk 32bit, oleh karena itu library 32bit sebaiknya dibangun.</li> </ul> <ul> <li>lalu pergi ke direktori Makefile SBC yang seharusnya terletak di:  <code>[DynamixelSDK folder]/cpp/build/linux_sbc</code>  menggunakan perintah: <pre><code>$ make\n</code></pre></li> </ul> <ul> <li>Untuk memasukkan Library ke Root Directory (Untuk menghandle serial port) menggunakan perintah: <pre><code>$ sudo make install\n</code></pre></li> </ul>"},{"location":"instalasiS/#penjalanan-sample-code","title":"Penjalanan sample code","text":"<p>Sample code Dynamixel SDK untuk pengguna CPP menggunakan library files (atau .so untuk Linux), Oleh karena ini sebaiknya library file dibuat didalam path seperti ini:  <code>[DynamixelSDK folder]/c++/build/[linuxXX]/libdxl_xYY_cpp.so</code>  dengan source code nya sendiri seperti yang dapat dilihat diatas.</p> <ul> <li>Memilih format (32bit atau 64bit) yang ingin digunakan untuk pembuatan library. File MakeFile untuk Building Source berada didalam direktori seperti dibawah ini: <code>[DynamixelSDK folder]/c++/example/protocol1.0/read_write/linux32</code> atau <code>[DynamixelSDK folder]/c++/example/protocol1.0/read_write/linux64</code></li> </ul> <p>Note</p> <p>Jika ingin membuat build example source dalam format 32bit maka library ini juga harus dibuat dalam format yang sama </p> <p></p> <ul> <li>Lalu pada terminal, pergi ke folder MakeFile: <code>/c++/example/protocol1.0/read_write/linux32</code> sebagai contoh, membuat file executable menggunakan command ini: <pre><code>$ make\n</code></pre></li> </ul> <p></p> <ul> <li>Jika terdeteksi suatu error maka dapat menggunakan command  <code>make clean</code> dan mamsukkan lagi commmand <code>make</code> untuk mengulangi proses pembuatan dan mencoba menghilangkan error.</li> </ul> <p></p> <ul> <li>Setelah itu masukkan command ini agar port dapat digunakan: <pre><code>$ sudo chmod a+rw /dev/ttyUSB0\n</code></pre></li> </ul> <p></p> <ul> <li>Setelah semuanya berfungsi dengan baik, kita akhirnya dapat menjalankan source code menggunakan command ini: <pre><code>$ ./read_write\n</code></pre></li> </ul> <p></p> <p>Untuk lebih lengkapnya mengenai proses instalasi software Dynamixel SDk dapat pada web page official Dynamixel dibawah ini. </p> <p>Dynamixel Library Setup</p> <p></p>"},{"location":"instalasiS/#penginstalan-software-vision","title":"Penginstalan Software Vision","text":""},{"location":"instalasiS/#menginstall-jetson-inference","title":"Menginstall Jetson Inference","text":""},{"location":"instalasiS/#memperbarui-ubuntu-dan-git-cmake","title":"Memperbarui Ubuntu dan Git Cmake","text":"<p>Hal pertama yang harus dilakukan adalah update ubuntu dengan source code berikut:  <pre><code>$ sudo apt-get update\n</code></pre> Setelah itu install git cmake dengan source code berikut: <pre><code>$ sudo apt-get install git cmake\n</code></pre></p>"},{"location":"instalasiS/#menduplicate-library-jetson","title":"Menduplicate Library Jetson","text":"<p>Lalu duplikat library jetson inference dengan source code berikut:  <pre><code>$ git clone https://github.com/dusty-nv/jetson-inference\n</code></pre> Setelah di duplikat masuk kedalam jetson inference dengan source code berikut: <pre><code>$ cd jetson-inference\n$ git submodule update --init\n</code></pre></p>"},{"location":"instalasiS/#menginstall-libpython3","title":"Menginstall libpython3","text":"<p>Lalu install libpython3 dengan source code berikut:  <pre><code>$ sudo apt-get install libpython3-dev python3-numpy\n</code></pre> Setelah itu masuk kedalam jetson inference dengan source code berikut:  <pre><code>$ cd jetson-inference\n</code></pre> Buatlah sebuah folder dengan nama build dengan source code berikut:  <pre><code>$ mkdir build\n</code></pre> Setelah buat folder lalu masuk kedalam folder build dengan source code berikut:  <pre><code>$ cd build\n</code></pre> Gunakan source code berikut untuk membuat Library:  <pre><code>$ cmake ../\n</code></pre> Lalu buka build yang ada pada folder jetson inference dengan source code berikut:  <pre><code>$ cd jetson-inference/build\n</code></pre> Setelah itu compiling library dengan source code berikut:  <pre><code>$ make\n</code></pre> Lalu install library dengan source code berikut:  <pre><code>$ sudo make install\n</code></pre> Lalu langkah terakhir penginstalan library adalah mengetik source berikut untuk menyelesaikan instalasi  <pre><code>$ sudo ldconfig\n</code></pre></p>"},{"location":"setup/","title":"Setup Utama","text":""},{"location":"setup/#jetson-nano","title":"Jetson Nano","text":"<p>Robot Hexapod Barelang F1 menggunakan Mini PC Jetson Nano sebagai central processing unit yang akan memproses bermacam banyaknya data secara real-time. Jetson Nano juga akan berperan penting dalam peran Computer Vision dan Motion Controll dimana semua sensor dan sistem pergerakan robot akan bergantung kepada kecepatan prosesi Jetson Nano yang kencang. </p>"},{"location":"setup/#instalasi-nvidia-jetson","title":"Instalasi NVidia Jetson","text":"<p>Untuk melakukan instalasi software Jeson Nano dapat dilihat pada Official NVidia Jetson Nano Installation Guide dibawah ini:  Visit the official page </p> <p>Setelah melakukan proses instalasi dari link idatas, masukkan command berikut ini untuk melakukan update system <pre><code>sudo apt update\n</code></pre> dan  <pre><code>sudo apt upgrade\n</code></pre></p> <p>Dua command diatas tadi berfungsi untuk memperbarui local package index dan memastikan sistem memiliki informasi terbaru tentang semua package yang ada dan versinya.</p>"},{"location":"setup/#jetson-nano-ubuntu-dummy-video","title":"Jetson Nano Ubuntu Dummy Video","text":"<p>Penginstalan Dummy video Driver ini diperlukan agar Jetson dapat menampilkan gambar pada device yang akan digunakan. Untuk monitor dengan resolusi layar tetap menggunakan VNC atau Nomachine, run perintah berikut ini di terminal satu per satu. <pre><code>sudo apt-get install xserver-xorg-core\n</code></pre> <pre><code>sudo apt-get install xserver-xorg-video-dummy\n</code></pre> <pre><code>sudo apt-get install --reinstall xserver-xorg-input-all\n</code></pre> <pre><code>sudo nano /usr/share/X11/xorg.conf.d/xorg.conf\n</code></pre> dan lakukan penginstalan dengan memasukkan perintah ini: <pre><code>sudo apt install nano\n</code></pre></p> <p> Setelah itu, paste perintah berikut ini:</p> <p><pre><code>Section \"Module\"\n\n    Disable     \"dri\"\n        SubSection  \"extmod\"\n            Option  \"omit xfree86-dga\"\n        EndSubSection\n    EndSection\n\n    Section \"Device\"\n        Identifier  \"Tegra0\"\n        Driver      \"nvidia\"\n        Option      \"AllowEmptyInitialConfiguration\" \"true\"\n    EndSection\n\n    Section \"Monitor\"\n       Identifier \"DSI-0\"\n       Option    \"Ignore\"\n    EndSection\n\n    Section \"Screen\"\n       Identifier    \"Default Screen\"\n       Monitor        \"Configured Monitor\"\n       Device        \"Default Device\"\n       SubSection \"Display\"\n           Depth    24\n           Virtual 1280 720\n       EndSubSection\n    EndSection\n</code></pre> Setelah memasukkan semua perintah diatas, langkah berikutnya adalah keluar dari program dan menyimpannya dengan cara <code>ctrl + X</code> dan memilih opsi Yes <code>Y</code> kitka muncul permintaan untuk menyimpan program.</p> <p></p>"},{"location":"setup/#vsc-jetson","title":"VSC Jetson","text":"<p>Untuk melakukan instalasi Visual Studio Code ke dalam Jetson Nano dapat dilakukan dengan mendownload VSC tertentu melalui tombol dibawah ini: </p> <p>VSC for Jetson  </p> <p>Setelah itu memasukkan perintah ini untuk melakukan penginstalan:  <pre><code>cd Downloads \n</code></pre> <pre><code>sudo dpkg -i [nama file VS code yang didownload]\n</code></pre></p> <p></p>"},{"location":"setup/#penginstalan-nomachine","title":"Penginstalan Nomachine","text":"<p>Nomachine adalah program desktop jarak jauh yang bisa digunakan dengan NVidia Jetson untuk banyak macam hal, diantaranya: </p> <ul> <li>Mengakses file, audio dan video.</li> <li>Merekam dan menyiarkan layar.</li> <li>Memindahkan dan mentransfer file.</li> </ul> <p>Nomachine menjadi pilihan utama karena lebih ringan dan lebih cepat ketimbang VNC. Penginstalan NoMachine kedalam NVidia Jetson Nano dapat dilakukan dengan mendownload NoMachine .deb package untuk ARmv8 melalui Official Website atau mendownloadnya langsung menggunakan command wget sebagai berikut:  <pre><code>cd Downloads \n</code></pre> <pre><code>wget https://www.nomachine.com/free/arm/v8/deb -O nomachine.deb\n</code></pre> Lalu melakukan penginstalan dengan command ini: <pre><code>sudo dpkg -i nomachine.deb\n</code></pre></p> <p> Setelah melakukan semua step diatas, masukkan program berikut untuk reboot system: <pre><code>sudo reboot\n</code></pre></p>"}]}